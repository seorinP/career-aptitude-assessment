{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\career-aptitude-assessment\\\\src\\\\pages\\\\Result\\\\Chart.js\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from \"react\";\nimport { interpretationNames } from \"utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const maxScore = useMemo(() => {\n    if (Array.isArray(data)) {\n      return Math.max(...data.map(_ref2 => {\n        let {\n          score\n        } = _ref2;\n        return score;\n      }));\n    }\n\n    return 1;\n  }, [data]);\n  const rows = useMemo(() => {\n    if (Array.isArray(data)) {\n      const row = /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: data.map(() => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this);\n\n      const result = new Array(10).fill(row);\n      return result;\n    }\n\n    return [];\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"auto\",\n      marginBottom: 48\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered m-0\",\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\",\n        left: 0,\n        bottom: 0,\n        display: \"flex\",\n        alignItems: \"flex-end\",\n        justifyContent: \"space-between\"\n      },\n      children: Array.isArray(data) && data.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            display: \"flex\",\n            alignItems: \"flex-end\",\n            justifyContent: \"center\",\n            height: \"100%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-success\",\n            style: {\n              position: \"relative\",\n              width: \"55%\",\n              height: `${(value === null || value === void 0 ? void 0 : value.score) / maxScore * 80}%`,\n              color: maroon\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-secondary\",\n              style: {\n                fontFamily: 'Binggrae-Bold',\n                textAlign: \"center\",\n                position: \"absolute\",\n                bottom: \"100%\",\n                width: \"100%\"\n              },\n              children: value === null || value === void 0 ? void 0 : value.score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-secondary\",\n              style: {\n                fontFamily: 'Binggrae-Bold',\n                textAlign: \"center\",\n                position: \"absolute\",\n                top: \"100%\",\n                width: \"100%\",\n                paddingTop: 8\n              },\n              children: interpretationNames[(value === null || value === void 0 ? void 0 : value.seq) - 1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chart, \"vNYbHm5BbalIHSczqRZvNMe5FbY=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/study/career-aptitude-assessment/src/pages/Result/Chart.js"],"names":["useMemo","interpretationNames","Chart","data","maxScore","Array","isArray","Math","max","map","score","rows","row","result","fill","position","width","height","marginBottom","left","bottom","display","alignItems","justifyContent","value","flex","color","maroon","fontFamily","textAlign","top","paddingTop","seq"],"mappings":"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","sourcesContent":["import { useMemo } from \"react\";\nimport { interpretationNames } from \"utils/constants\";\n\nconst Chart = ({ data }) => {\n  const maxScore = useMemo(() => {\n    if (Array.isArray(data)) {\n      return Math.max(...data.map(({ score }) => score));\n    }\n    return 1;\n  }, [data]);\n\n  const rows = useMemo(() => {\n    if (Array.isArray(data)) {\n      const row = (\n        <tr>\n          {data.map(() => (\n            <td>&nbsp;</td>\n          ))}\n        </tr>\n      );\n      const result = new Array(10).fill(row);\n      return result;\n    }\n    return [];\n  }, [data]);\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: \"100%\",\n        height: \"auto\",\n        marginBottom: 48,\n      }}\n    >\n      <table className=\"table table-bordered m-0\">{rows}</table>\n      <div\n        style={{\n          position: \"absolute\",\n          width: \"100%\",\n          height: \"100%\",\n          left: 0,\n          bottom: 0,\n          display: \"flex\",\n          alignItems: \"flex-end\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        {Array.isArray(data) &&\n          data.map((value) => {\n            return (\n              <div\n                style={{\n                  flex: 1,\n                  display: \"flex\",\n                  alignItems: \"flex-end\",\n                  justifyContent: \"center\",\n                  height: \"100%\",\n                }}\n              >\n                <div\n                  className=\"bg-success\"\n                  style={{\n                    position: \"relative\",\n                    width: \"55%\",\n                    height: `${(value?.score / maxScore) * 80}%`,\n                    color: maroon\n                  }}\n                >\n                  <div\n                    className=\"text-secondary\"\n                    style={{\n                      fontFamily:'Binggrae-Bold',\n                      textAlign: \"center\",\n                      position: \"absolute\",\n                      bottom: \"100%\",\n                      width: \"100%\",\n                    }}\n                  >\n                    {value?.score}\n                  </div>\n\n                  <div\n                    className=\"text-secondary\"\n                    style={{\n                      fontFamily:'Binggrae-Bold',\n                      textAlign: \"center\",\n                      position: \"absolute\",\n                      top: \"100%\",\n                      width: \"100%\",\n                      paddingTop: 8,\n                    }}\n                  >\n                    {interpretationNames[value?.seq - 1]}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}