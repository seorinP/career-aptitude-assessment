{"ast":null,"code":"import Axios from \"axios\";\nconst apikey = process.env.REACT_APP_TEST_API_KEY;\nconst axios = Axios.create({\n  baseURL: process.env.REACT_APP_TEST_API_HOST,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\nconst SUCCESS = {\n  Y: \"Y\",\n  N: \"N\"\n};\nconst QUESTION_SEQ = \"6\";\nconst TARGET_SEQ = \"100209\";\nconst api = {};\n\napi.getQuestions = async () => {\n  var _res$data, _res$data2;\n\n  const res = await axios.get(\"/questions\", {\n    params: {\n      apikey,\n      q: QUESTION_SEQ\n    }\n  });\n\n  if ((res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.SUCC_YN) === SUCCESS.Y) {\n    return res.data.RESULT;\n  }\n\n  throw new Error((res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.ERROR_REASON) || \"\");\n};\n\napi.submit = async _ref => {\n  var _res$data3, _res$data4;\n\n  let {\n    name,\n    gender,\n    startDtm,\n    answers\n  } = _ref;\n  const qestrnSeq = QUESTION_SEQ;\n  const trgetSe = TARGET_SEQ;\n  const res = await axios.post(\"/report\", {\n    apikey,\n    qestrnSeq,\n    trgetSe,\n    name,\n    gender,\n    startDtm,\n    answers\n  });\n\n  if ((res === null || res === void 0 ? void 0 : (_res$data3 = res.data) === null || _res$data3 === void 0 ? void 0 : _res$data3.SUCC_YN) === SUCCESS.Y) {\n    return res.data.RESULT;\n  }\n\n  throw new Error((res === null || res === void 0 ? void 0 : (_res$data4 = res.data) === null || _res$data4 === void 0 ? void 0 : _res$data4.ERROR_REASON) || \"\");\n};\n\nexport default api;","map":{"version":3,"sources":["C:/study/career-aptitude-assessment/src/utils/api/test.js"],"names":["Axios","apikey","process","env","REACT_APP_TEST_API_KEY","axios","create","baseURL","REACT_APP_TEST_API_HOST","headers","SUCCESS","Y","N","QUESTION_SEQ","TARGET_SEQ","api","getQuestions","res","get","params","q","data","SUCC_YN","RESULT","Error","ERROR_REASON","submit","name","gender","startDtm","answers","qestrnSeq","trgetSe","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAA3B;AACA,MAAMC,KAAK,GAAGL,KAAK,CAACM,MAAN,CAAa;AACzBC,EAAAA,OAAO,EAAEL,OAAO,CAACC,GAAR,CAAYK,uBADI;AAEzBC,EAAAA,OAAO,EAAE;AAAE,oBAAgB;AAAlB;AAFgB,CAAb,CAAd;AAKA,MAAMC,OAAO,GAAG;AACdC,EAAAA,CAAC,EAAE,GADW;AAEdC,EAAAA,CAAC,EAAE;AAFW,CAAhB;AAKA,MAAMC,YAAY,GAAG,GAArB;AACA,MAAMC,UAAU,GAAG,QAAnB;AAEA,MAAMC,GAAG,GAAG,EAAZ;;AAEAA,GAAG,CAACC,YAAJ,GAAmB,YAAY;AAAA;;AAC7B,QAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,YAAV,EAAwB;AACxCC,IAAAA,MAAM,EAAE;AAAElB,MAAAA,MAAF;AAAUmB,MAAAA,CAAC,EAAEP;AAAb;AADgC,GAAxB,CAAlB;;AAGA,MAAI,CAAAI,GAAG,SAAH,IAAAA,GAAG,WAAH,yBAAAA,GAAG,CAAEI,IAAL,wDAAWC,OAAX,MAAuBZ,OAAO,CAACC,CAAnC,EAAsC;AACpC,WAAOM,GAAG,CAACI,IAAJ,CAASE,MAAhB;AACD;;AACD,QAAM,IAAIC,KAAJ,CAAU,CAAAP,GAAG,SAAH,IAAAA,GAAG,WAAH,0BAAAA,GAAG,CAAEI,IAAL,0DAAWI,YAAX,KAA2B,EAArC,CAAN;AACD,CARD;;AAUAV,GAAG,CAACW,MAAJ,GAAa,cAA+C;AAAA;;AAAA,MAAxC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,GAAwC;AAC1D,QAAMC,SAAS,GAAGlB,YAAlB;AACA,QAAMmB,OAAO,GAAGlB,UAAhB;AACA,QAAMG,GAAG,GAAG,MAAMZ,KAAK,CAAC4B,IAAN,CAAW,SAAX,EAAsB;AACtChC,IAAAA,MADsC;AAEtC8B,IAAAA,SAFsC;AAGtCC,IAAAA,OAHsC;AAItCL,IAAAA,IAJsC;AAKtCC,IAAAA,MALsC;AAMtCC,IAAAA,QANsC;AAOtCC,IAAAA;AAPsC,GAAtB,CAAlB;;AASA,MAAI,CAAAb,GAAG,SAAH,IAAAA,GAAG,WAAH,0BAAAA,GAAG,CAAEI,IAAL,0DAAWC,OAAX,MAAuBZ,OAAO,CAACC,CAAnC,EAAsC;AACpC,WAAOM,GAAG,CAACI,IAAJ,CAASE,MAAhB;AACD;;AACD,QAAM,IAAIC,KAAJ,CAAU,CAAAP,GAAG,SAAH,IAAAA,GAAG,WAAH,0BAAAA,GAAG,CAAEI,IAAL,0DAAWI,YAAX,KAA2B,EAArC,CAAN;AACD,CAhBD;;AAkBA,eAAeV,GAAf","sourcesContent":["import Axios from \"axios\";\n\nconst apikey = process.env.REACT_APP_TEST_API_KEY;\nconst axios = Axios.create({\n  baseURL: process.env.REACT_APP_TEST_API_HOST,\n  headers: { \"Content-Type\": \"application/json\" },\n});\n\nconst SUCCESS = {\n  Y: \"Y\",\n  N: \"N\",\n};\n\nconst QUESTION_SEQ = \"6\";\nconst TARGET_SEQ = \"100209\";\n\nconst api = {};\n\napi.getQuestions = async () => {\n  const res = await axios.get(\"/questions\", {\n    params: { apikey, q: QUESTION_SEQ },\n  });\n  if (res?.data?.SUCC_YN === SUCCESS.Y) {\n    return res.data.RESULT;\n  }\n  throw new Error(res?.data?.ERROR_REASON || \"\");\n};\n\napi.submit = async ({ name, gender, startDtm, answers }) => {\n  const qestrnSeq = QUESTION_SEQ;\n  const trgetSe = TARGET_SEQ;\n  const res = await axios.post(\"/report\", {\n    apikey,\n    qestrnSeq,\n    trgetSe,\n    name,\n    gender,\n    startDtm,\n    answers,\n  });\n  if (res?.data?.SUCC_YN === SUCCESS.Y) {\n    return res.data.RESULT;\n  }\n  throw new Error(res?.data?.ERROR_REASON || \"\");\n};\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}